Q)-Length of the longest subarray with positive product

Given an array arr[] consisting of n integers, find the length of the longest subarray with positive (non zero) product.

 

Example 1:

Input:
arr[] ={0, 1, -2, -3, -4} 
Output:
3
Explanation: 
The longest subarray with positive product is: 
{1, -2, -3}.Therefore, the required length is 3.
 

Example 2:

Input:
arr[]={-1, -2, 0, 1, 2}
Output:
2
Explanation:
The longest subarray with positive products 
are: {-1, -2}, {1, 2}. Therefore, the required 
length is 2.
 

Your Task: This is a function problem. You don't need to take any input, as it is already accomplished by the driver code. You just need to complete the function maxLength() that takes array arr[], and an integer n as parameters and return the length of the longest subarray where the product of all of its element is positive. 

 

Expected Time Complexity: O(n).
Expected Auxiliary Space: O(1).

 

Constraints:
 1<=n<=105
-109<=arr[i]<=109

Ans)-
#Back-end complete function Template for Python 3

class Solution:
    def maxLength(self,arr,n):
        pos = 0
        neg = 0
        ans = 0
        
        for i in range(n):
            if arr[i] == 0:
                pos,neg = 0,0
            elif arr[i] > 0 :
                pos+=1
                if neg > 0:
                    neg+=1
            else:
                temp = pos
                if neg > 0:
                    pos = neg + 1
                else:
                    pos = 0
                neg = temp + 1
            ans = max(ans,pos)
        return ans
        
